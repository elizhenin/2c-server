{
  "name": "quoted-printable",
  "version": "1.0.1",
  "description": "A robust & character encodingâ€“agnostic JavaScript implementation of the `Quoted-Printable` content transfer encoding as defined by RFC 2045.",
  "homepage": "https://mths.be/quoted-printable",
  "main": "quoted-printable.js",
  "bin": {
    "quoted-printable": "bin/quoted-printable"
  },
  "man": [
    "man/quoted-printable.1"
  ],
  "keywords": [
    "decode",
    "decoding",
    "encode",
    "encoding",
    "quoted-printable",
    "string"
  ],
  "license": "MIT",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mathiasbynens/quoted-printable.git"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/quoted-printable/issues"
  },
  "files": [
    "LICENSE-MIT.txt",
    "quoted-printable.js",
    "bin/",
    "man/"
  ],
  "directories": {
    "bin": "bin",
    "man": "man",
    "test": "tests"
  },
  "scripts": {
    "test": "node tests/tests.js"
  },
  "dependencies": {
    "utf8": "^2.1.0"
  },
  "devDependencies": {
    "coveralls": "^2.11.1",
    "grunt": "^0.4.5",
    "grunt-shell": "^1.1.1",
    "grunt-template": "^0.2.3",
    "istanbul": "^0.3.5",
    "jsesc": "^0.5.0",
    "qunit-extras": "^1.4.0",
    "qunitjs": "~1.11.0",
    "regenerate": "^1.2.1",
    "requirejs": "^2.1.15",
    "string.fromcodepoint": "^0.2.1"
  },
  "readme": "# quoted-printable [![Build status](https://travis-ci.org/mathiasbynens/quoted-printable.svg?branch=master)](https://travis-ci.org/mathiasbynens/quoted-printable) [![Code coverage status](https://coveralls.io/repos/mathiasbynens/quoted-printable/badge.svg)](https://coveralls.io/r/mathiasbynens/quoted-printable) [![Dependency status](https://gemnasium.com/mathiasbynens/quoted-printable.svg)](https://gemnasium.com/mathiasbynens/quoted-printable)\n\n_quoted-printable_ is a character encodingâ€“agnostic JavaScript implementation of [the `Quoted-Printable` content transfer encoding as defined by RFC 2045](https://tools.ietf.org/html/rfc2045#section-6.7). It can be used to encode plaintext to its `Quoted-Printable` encoding, or the other way around (i.e. decoding). [Hereâ€™s an online demo using the UTF-8 character encoding.](https://mothereff.in/quoted-printable)\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install quoted-printable\n```\n\nVia [Bower](http://bower.io/):\n\n```bash\nbower install quoted-printable\n```\n\nVia [Component](https://github.com/component/component):\n\n```bash\ncomponent install mathiasbynens/quoted-printable\n```\n\nIn a browser:\n\n```html\n<script src=\"quoted-printable.js\"></script>\n```\n\nIn [Node.js](https://nodejs.org/), [io.js](https://iojs.org/), [Narwhal](http://narwhaljs.org/), and [RingoJS](http://ringojs.org/):\n\n```js\nvar quotedPrintable = require('quoted-printable');\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload('quoted-printable.js');\n```\n\nUsing an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire(\n  {\n    'paths': {\n      'quoted-printable': 'path/to/quoted-printable'\n    }\n  },\n  ['quoted-printable'],\n  function(quotedPrintable) {\n    console.log(quotedPrintable);\n  }\n);\n```\n\n## API\n\n### `quotedPrintable.version`\n\nA string representing the semantic version number.\n\n### `quotedPrintable.encode(input)`\n\nThis function takes an encoded byte string (the `input` parameter) and `Quoted-Printable`-encodes it. Each item in the input string represents an octet as per the desired character encoding. Hereâ€™s an example that uses UTF-8:\n\n```js\nvar utf8 = require('utf8');\n\nquotedPrintable.encode(utf8.encode('foo=bar'));\n// â†’ 'foo=3Dbar'\n\nquotedPrintable.encode(utf8.encode('IÃ±tÃ«rnÃ¢tiÃ´nÃ lizÃ¦tiÃ¸nâ˜ƒðŸ’©'));\n// â†’ 'I=C3=B1t=C3=ABrn=C3=A2ti=C3=B4n=C3=A0liz=C3=A6ti=C3=B8n=E2=98=83=F0=9F=92=\\r\\n=A9'\n```\n\n### `quotedPrintable.decode(text)`\n\nThis function takes a string of text (the `text` parameter) and `Quoted-Printable`-decodes it. The return value is a â€˜byte stringâ€™, i.e. a string of which each item represents an octet as per the character encoding thatâ€™s being used. Hereâ€™s an example that uses UTF-8:\n\n```js\nvar utf8 = require('utf8');\n\nutf8.decode(quotedPrintable.decode('foo=3Dbar'));\n// â†’ 'foo=bar'\n\nutf8.decode(quotedPrintable.decode('I=C3=B1t=C3=ABrn=C3=A2ti=C3=B4n=C3=A0liz=C3=A6ti=C3=B8n=E2=98=83=F0=9F=92=\\r\\n=A9'));\n// â†’ 'IÃ±tÃ«rnÃ¢tiÃ´nÃ lizÃ¦tiÃ¸nâ˜ƒðŸ’©'\n```\n\n### Using the `quoted-printable` binary\n\nTo use the `quoted-printable` binary in your shell, simply install _quoted-printable_ globally using npm:\n\n```bash\nnpm install -g quoted-printable\n```\n\nAfter that, youâ€™ll be able to use `quoted-printable` on the command line. Note that while the _quoted-printable_ library itself is character encodingâ€“agnostic, the command-line tool applies the UTF-8 character encoding on all input.\n\n```bash\n$ quoted-printable --encode 'foo=bar'\nfoo=3Dbar\n\n$ quoted-printable --decode 'foo=3Dbar'\nfoo=bar\n```\n\nRead a local text file, `Quoted-Printable`-encode it, and save the result to a new file:\n\n```bash\n$ quoted-printable --encode < foo.txt > foo-quoted-printable.txt\n```\n\nOr do the same with an online text file:\n\n```bash\n$ curl -sL 'https://mths.be/brh' | quoted-printable --encode > quoted-printable.txt\n```\n\nOr, the opposite â€” read a local file containing a `Quoted-Printable`-encoded message, decode it back to plain text, and save the result to a new file:\n\n```bash\n$ quoted-printable --decode < quoted-printable.txt > original.txt\n```\n\nSee `quoted-printable --help` for the full list of options.\n\n## Support\n\n_quoted-printable_ is designed to work in at least Node.js v0.10.0, io.js v1.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, Rhino 1.7RC4, as well as old and modern versions of Chrome, Firefox, Safari, Opera, and Internet Explorer.\n\n## Unit tests & code coverage\n\nAfter cloning this repository, run `npm install` to install the dependencies needed for development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.\n\nOnce thatâ€™s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use `grunt test`.\n\nTo generate the code coverage report, use `grunt cover`.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_quoted-printable_ is available under the [MIT](https://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "_id": "quoted-printable@1.0.1",
  "dist": {
    "shasum": "304c5cf979d8daaa3cabcbcfe8e39b927d30b989"
  },
  "_from": "quoted-printable@^1.0.0",
  "_resolved": "https://registry.npmjs.org/quoted-printable/-/quoted-printable-1.0.1.tgz"
}
